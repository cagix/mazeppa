main(a) := f0("out", match >(f1(f0("i", Cell("a", a, Cell("x", Int(7u32), Cell(
    "out", Int(1i32), Cell("i", Int(7u32), Nil())))))), 0u32) {
        F() -> Cell("a", a, Cell("x", Int(7u32), Cell("out", Int(1i32), Cell("i"
        , Int(7u32), Nil())))),
        T() -> f11(While(GreaterThan(Var("i"), Int(0u32)), Cons(Assign("out",
        Mul(Var("out"), Var("a"))), Cons(Assign("i", Sub(Var("i"), Int(1u32))),
        Nil()))), f6(f2("out", f1(f0("out", Cell("a", a, Cell("x", Int(7u32),
        Cell("out", Int(1i32), Cell("i", Int(7u32), Nil())))))), f1(f0("a", Cell
        ("a", a, Cell("x", Int(7u32), Cell("out", Int(1i32), Cell("i", Int(7u32)
        , Nil())))))), Cell("a", a, Cell("x", Int(7u32), Cell("out", Int(1i32),
        Cell("i", Int(7u32), Nil()))))), Cons(Assign("i", Sub(Var("i"), Int(1u32
        ))), Nil())))
    });

f0(x0, x1) := match x1 {
    Cell(x2, x3, x4) -> match =(x0, x2) {
        F() -> f0(x0, x4),
        T() -> x3
    },
    Nil() -> Panic(++("the variable is unbound: ", x0))
};

f1(x0) := match x0 {
    Boolean(x1) -> Panic("want `Int(n)`, got `Boolean(b)`"),
    Int(x1) -> x1
};

f10(x0, x1, x2, x3) := match x0 {
    F() -> x1,
    T() -> f11(x3, f7(x2, x1))
};

f11(x0, x1) := match x0 {
    Assign(x2, x3) -> f5(x1, x2, f3(x1, x3)),
    If(x2, x3, x4) -> f9(f8(f3(x1, x2)), x4, x1, x3),
    While(x2, x3) -> f10(f8(f3(x1, x2)), x1, x3, While(x2, x3))
};

f2(x0, x1, x2, x3) := match x3 {
    Cell(x4, x5, x6) -> match =(x0, x4) {
        F() -> let x7 := f2(x0, x1, x2, x6); Cell(x4, x5, x7),
        T() -> Cell(x4, Int(*(x1, x2)), x6)
    },
    Nil() -> Cell(x0, Int(*(x1, x2)), Nil())
};

f3(x0, x1) := match x1 {
    Boolean(x2) -> Boolean(x2),
    GreaterThan(x2, x3) ->
    let x4 := f4(x0, x2); let x5 := f4(x0, x3); Boolean(>(x4, x5)),
    Int(x2) -> Int(x2),
    Mul(x2, x3) -> let x4 := f4(x0, x2); let x5 := f4(x0, x3); Int(*(x4, x5)),
    Sub(x2, x3) -> let x4 := f4(x0, x2); let x5 := f4(x0, x3); Int(-(x4, x5)),
    Var(x2) -> f0(x2, x0)
};

f4(x0, x1) := f1(f3(x0, x1));

f5(x0, x1, x2) := match x0 {
    Cell(x3, x4, x5) -> match =(x1, x3) {
        F() -> let x6 := f5(x5, x1, x2); Cell(x3, x4, x6),
        T() -> Cell(x3, x2, x5)
    },
    Nil() -> Cell(x1, x2, Nil())
};

f6(x0, x1) := match x1 {
    Cons(x2, x3) -> match x2 {
        Assign(x4, x5) -> f7(x3, f5(x0, x4, f3(x0, x5))),
        If(x4, x5, x6) -> f7(x3, f9(f8(f3(x0, x4)), x6, x0, x5)),
        While(x4, x5) -> f7(x3, f10(f8(f3(x0, x4)), x0, x5, While(x4, x5)))
    },
    Nil() -> x0
};

f7(x0, x1) := f6(x1, x0);

f8(x0) := match x0 {
    Boolean(x1) -> x1,
    Int(x1) -> Panic("want `Boolean(b)`, got `Int(n)`")
};

f9(x0, x1, x2, x3) := match x0 {
    F() -> f7(x1, x2),
    T() -> f7(x3, x2)
};
