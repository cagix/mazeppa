// Theorem proving: De Morgan's laws. Does not involve induction.
main(p, q) := Combine(
    equals(not(or(p, q)), and(not(p), not(q))),
    equals(not(and(p, q)), or(not(p), not(q)))
);

or(p, q) := match p {
    T() -> T(), F() -> q
};

and(p, q) := match p {
    T() -> q, F() -> F()
};

equals(p, q) := match p {
    T() -> q, F() -> not(q)
};

not(p) := match p {
    T() -> F(), F() -> T()
};
