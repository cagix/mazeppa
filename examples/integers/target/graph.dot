digraph {
    node [fontname="bold helvetica"];
    edge [fontname="bold helvetica"];
    n0 [label="n0: <unfold>"];
    n1 [label="n1: Combine"];
    n0 -> n1;
    n2 [label="n2: BitNot"];
    n1 -> n2 [label=" #0 "];
    n3 [label="n3: 255u8"];
    n2 -> n3 [label=" #0 "];
    n4 [label="n4: 0u8"];
    n2 -> n4 [label=" #1 "];
    n5 [label="n5: StringOf"];
    n1 -> n5 [label=" #1 "];
    n6 [label="n6: \"123\""];
    n5 -> n6 [label=" #0 "];
    n7 [label="n7: \"-123\""];
    n5 -> n7 [label=" #1 "];
    n8 [label="n8: StringOfChar"];
    n1 -> n8 [label=" #2 "];
    n9 [label="n9: \"a\""];
    n8 -> n9 [label=" #0 "];
    n10 [label="n10: \"\xFF\""];
    n8 -> n10 [label=" #1 "];
    n11 [label="n11: Cast"];
    n1 -> n11 [label=" #3 "];
    n12 [label="n12: 123i32"];
    n11 -> n12 [label=" #0 "];
    n13 [label="n13: 123u8"];
    n11 -> n13 [label=" #1 "];
    n14 [label="n14: 123u8"];
    n11 -> n14 [label=" #2 "];
    n15 [label="n15: Panic"];
    n11 -> n15 [label=" #3 "];
    n16 [label="n16: \"out of range: `u16(-123i8)`\""];
    n15 -> n16 [label=" #0 "];
    n17 [label="n17: Add"];
    n1 -> n17 [label=" #4 "];
    n18 [label="n18: 35u8"];
    n17 -> n18 [label=" #0 "];
    n19 [label="n19: Panic"];
    n17 -> n19 [label=" #1 "];
    n20 [label="n20: \"out of range: `+(255u8, 1u8)`\""];
    n19 -> n20 [label=" #0 "];
    n21 [label="n21: Panic"];
    n17 -> n21 [label=" #2 "];
    n22 [label="n22: \"out of range: `+(-128i8, -1i8)`\""];
    n21 -> n22 [label=" #0 "];
    n23 [label="n23: Sub"];
    n1 -> n23 [label=" #5 "];
    n24 [label="n24: 5u8"];
    n23 -> n24 [label=" #0 "];
    n25 [label="n25: Panic"];
    n23 -> n25 [label=" #1 "];
    n26 [label="n26: \"out of range: `-(127i8, -1i8)`\""];
    n25 -> n26 [label=" #0 "];
    n27 [label="n27: Panic"];
    n23 -> n27 [label=" #2 "];
    n28 [label="n28: \"out of range: `-(0u8, 1u8)`\""];
    n27 -> n28 [label=" #0 "];
    n29 [label="n29: Mul"];
    n1 -> n29 [label=" #6 "];
    n30 [label="n30: 60u8"];
    n29 -> n30 [label=" #0 "];
    n31 [label="n31: -127i8"];
    n29 -> n31 [label=" #1 "];
    n32 [label="n32: Panic"];
    n29 -> n32 [label=" #2 "];
    n33 [label="n33: \"out of range: `*(255u8, 2u8)`\""];
    n32 -> n33 [label=" #0 "];
    n34 [label="n34: Panic"];
    n29 -> n34 [label=" #3 "];
    n35 [label="n35: \"out of range: `*(-128i8, -1i8)`\""];
    n34 -> n35 [label=" #0 "];
    n36 [label="n36: Panic"];
    n29 -> n36 [label=" #4 "];
    n37 [label="n37: \"out of range: `*(-128i8, 2i8)`\""];
    n36 -> n37 [label=" #0 "];
    n38 [label="n38: Panic"];
    n29 -> n38 [label=" #5 "];
    n39 [label="n39: \"out of range: `*(127i8, -2i8)`\""];
    n38 -> n39 [label=" #0 "];
    n40 [label="n40: Div"];
    n1 -> n40 [label=" #7 "];
    n41 [label="n41: 6u8"];
    n40 -> n41 [label=" #0 "];
    n42 [label="n42: 3u8"];
    n40 -> n42 [label=" #1 "];
    n43 [label="n43: Panic"];
    n40 -> n43 [label=" #2 "];
    n44 [label="n44: \"out of range: `/(1u8, 0u8)`\""];
    n43 -> n44 [label=" #0 "];
    n45 [label="n45: Panic"];
    n40 -> n45 [label=" #3 "];
    n46 [label="n46: \"out of range: `/(-128i8, -1i8)`\""];
    n45 -> n46 [label=" #0 "];
    n47 [label="n47: Rem"];
    n1 -> n47 [label=" #8 "];
    n48 [label="n48: 0u8"];
    n47 -> n48 [label=" #0 "];
    n49 [label="n49: 3u8"];
    n47 -> n49 [label=" #1 "];
    n50 [label="n50: Panic"];
    n47 -> n50 [label=" #2 "];
    n51 [label="n51: \"out of range: `%(1u8, 0u8)`\""];
    n50 -> n51 [label=" #0 "];
    n52 [label="n52: Panic"];
    n47 -> n52 [label=" #3 "];
    n53 [label="n53: \"out of range: `%(-128i8, -1i8)`\""];
    n52 -> n53 [label=" #0 "];
    n54 [label="n54: BitOr"];
    n1 -> n54 [label=" #9 "];
    n55 [label="n55: 110u8"];
    n54 -> n55 [label=" #0 "];
    n56 [label="n56: -10i8"];
    n54 -> n56 [label=" #1 "];
    n57 [label="n57: BitAnd"];
    n1 -> n57 [label=" #10 "];
    n58 [label="n58: 32u8"];
    n57 -> n58 [label=" #0 "];
    n59 [label="n59: 68i8"];
    n57 -> n59 [label=" #1 "];
    n60 [label="n60: BitXor"];
    n1 -> n60 [label=" #11 "];
    n61 [label="n61: 78u8"];
    n60 -> n61 [label=" #0 "];
    n62 [label="n62: -78i8"];
    n60 -> n62 [label=" #1 "];
    n63 [label="n63: LeftShift"];
    n1 -> n63 [label=" #12 "];
    n64 [label="n64: 80u8"];
    n63 -> n64 [label=" #0 "];
    n65 [label="n65: Panic"];
    n63 -> n65 [label=" #1 "];
    n66 [label="n66: \"out of range: `<<(42i8, -1i8)`\""];
    n65 -> n66 [label=" #0 "];
    n67 [label="n67: Panic"];
    n63 -> n67 [label=" #2 "];
    n68 [label="n68: \"out of range: `<<(42u8, 9u8)`\""];
    n67 -> n68 [label=" #0 "];
    n69 [label="n69: RightShift"];
    n1 -> n69 [label=" #13 "];
    n70 [label="n70: 5u8"];
    n69 -> n70 [label=" #0 "];
    n71 [label="n71: Panic"];
    n69 -> n71 [label=" #1 "];
    n72 [label="n72: \"out of range: `>>(42i8, -1i8)`\""];
    n71 -> n72 [label=" #0 "];
    n73 [label="n73: Panic"];
    n69 -> n73 [label=" #2 "];
    n74 [label="n74: \"out of range: `>>(42u8, 9u8)`\""];
    n73 -> n74 [label=" #0 "];
    n75 [label="n75: Equal"];
    n1 -> n75 [label=" #14 "];
    n76 [label="n76: T"];
    n75 -> n76 [label=" #0 "];
    n77 [label="n77: F"];
    n75 -> n77 [label=" #1 "];
    n78 [label="n78: NotEqual"];
    n1 -> n78 [label=" #15 "];
    n79 [label="n79: F"];
    n78 -> n79 [label=" #0 "];
    n80 [label="n80: T"];
    n78 -> n80 [label=" #1 "];
    n81 [label="n81: GreaterThan"];
    n1 -> n81 [label=" #16 "];
    n82 [label="n82: T"];
    n81 -> n82 [label=" #0 "];
    n83 [label="n83: F"];
    n81 -> n83 [label=" #1 "];
    n84 [label="n84: F"];
    n81 -> n84 [label=" #2 "];
    n85 [label="n85: GreaterThanEqual"];
    n1 -> n85 [label=" #17 "];
    n86 [label="n86: T"];
    n85 -> n86 [label=" #0 "];
    n87 [label="n87: T"];
    n85 -> n87 [label=" #1 "];
    n88 [label="n88: F"];
    n85 -> n88 [label=" #2 "];
    n89 [label="n89: LessThan"];
    n1 -> n89 [label=" #18 "];
    n90 [label="n90: T"];
    n89 -> n90 [label=" #0 "];
    n91 [label="n91: F"];
    n89 -> n91 [label=" #1 "];
    n92 [label="n92: F"];
    n89 -> n92 [label=" #2 "];
    n93 [label="n93: LessThanEqual"];
    n1 -> n93 [label=" #19 "];
    n94 [label="n94: T"];
    n93 -> n94 [label=" #0 "];
    n95 [label="n95: T"];
    n93 -> n95 [label=" #1 "];
    n96 [label="n96: F"];
    n93 -> n96 [label=" #2 "];
}
